---
format_version: 1.3.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
trigger_map:
- push_branch: develop
  workflow: develop
- push_branch: "*EN-*"
  workflow: develop
workflows:
  develop:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone: {}
    - ruby-script@2.1.0:
        inputs:
        - ruby_content: |-
            PROJECT_KEY = 'EN'
            RESULT_ENV_VARIABLE = 'JIRA_ISSUE_KEYS'

            puts "Searching issue keys in environment variables"

            ISSUE_KEY_REGEXP = /#{PROJECT_KEY}-\d+/
            issue_keys = []

            [
              :BITRISE_GIT_BRANCH,
              :GIT_CLONE_COMMIT_MESSAGE_SUBJECT,
              :GIT_CLONE_COMMIT_MESSAGE_BODY
            ].each do |var|
              print "#{var}: "
              value = ENV[var.to_s]
              if value.nil?
                puts "(not set)"
                next
              end
              var_issue_keys = value.scan(ISSUE_KEY_REGEXP).uniq
              puts var_issue_keys.inspect
              issue_keys += var_issue_keys
            end

            issue_keys.uniq!

            puts


            puts "Issue keys found:"
            puts issue_keys.inspect
            puts

            if issue_keys.none?
              puts "No issue key found, $#{RESULT_ENV_VARIABLE} has not been set."
            else
              issue_keys = issue_keys.join('|')
              puts "Setting $#{RESULT_ENV_VARIABLE} to '#{issue_keys}'."
              system(
                'envman', 'add',
                '--key', RESULT_ENV_VARIABLE.to_s,
                '--value', issue_keys
              )
            end
        - gemfile_content: ''
    - install-missing-android-tools: {}
    - gradle-runner:
        inputs:
        - apk_file_include_filter: "*.aab"
        - gradle_task: "$GRADLE_TASK_AAB"
    - gradle-runner:
        inputs:
        - apk_file_include_filter: "*.apk"
        - gradle_task: "$GRADLE_TASK"
    - deploy-to-bitrise-io: {}
    - post-jira-comment-with-build-details@1.1.0:
        inputs:
        - base_url: "$JIRA_BASE_URL"
        - api_token: "$JIRA_API_TOKEN"
        - user_name: "$JIRA_USER_EMAIL"
        - issue_keys: "$JIRA_ISSUE_KEYS"
    - slack:
        inputs:
        - webhook_url: https://hooks.slack.com/services/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
        - from_username: Bitrise
        - from_username_on_error: Bitrise
        - message: |-
            New DEV android build is available: $BITRISE_BUILD_NUMBER  here:
            $BITRISE_APP_URL
        - message_on_error: 'Oups, build has failed for android... @francois @mihai.ionescu '
        - icon_url: ''
        - icon_url_on_error: ''
        - pretext_on_error: "*Build Failed!* for *V5.0*"
        - pretext: "*Build Succeeded!* for *V5.0* (dev only)"
        - fields: |
            App|${BITRISE_APP_TITLE}
            Branch|${BITRISE_GIT_BRANCH}
            Workflow|${BITRISE_TRIGGERED_WORKFLOW_ID}
            Jira|<${JIRA_BASE_URL}browse/${JIRA_ISSUE_KEYS}|${JIRA_ISSUE_KEYS}>
        - api_token: "$SLACK__BOT_API_TOKEN"
        - channel: "#androiddev"
    envs:
    - opts:
        is_expand: false
      GRADLE_TASK_AAB: bundleEntourageProdRelease
  develop-backup:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone: {}
    - install-missing-android-tools@2.3.3: {}
    - gradle-runner:
        inputs:
        - gradle_task: "$GRADLE_TASK"
    - deploy-to-bitrise-io: {}
    - slack:
        inputs:
        - webhook_url: https://hooks.slack.com/services/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
        - from_username: Bitrise
        - from_username_on_error: Bitrise
        - message: |-
            New DEV android build is available: $BITRISE_BUILD_NUMBER  here:
            $BITRISE_APP_URL
        - message_on_error: 'Oups, build has failed for android... @francois @mihai.ionescu '
        - icon_url: ''
        - icon_url_on_error: ''
        - pretext_on_error: "*Build Failed!* for *V5.0*"
        - pretext: "*Build Succeeded!* for *V5.0* (dev only)"
        - api_token: "$SLACK__BOT_API_TOKEN"
        - channel: "#androiddev"
  primary:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone: {}
    - install-missing-android-tools: {}
    - gradle-runner:
        inputs:
        - gradle_task: "$GRADLE_TASK"
    - deploy-to-bitrise-io: {}
    - slack:
        inputs:
        - webhook_url: https://hooks.slack.com/services/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
        - from_username: Bitrise
        - from_username_on_error: Bitrise
        - message: |-
            New DEV android build is available: $BITRISE_BUILD_NUMBER  here:
            $BITRISE_APP_URL
        - message_on_error: 'Oups, build has failed for android... @francois @mihai.ionescu '
        - icon_url: ''
        - icon_url_on_error: ''
        - pretext: "*Build Succeeded!* : ready for *QA*"
        - channel: "#androiddev"
  NEWwhitelabel:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone: {}
    - install-missing-android-tools: {}
    - android-build:
        inputs:
        - variant: entourageStagingRelease
        - module: app
    - android-build:
        inputs:
        - variant: pfpStagingRelease
        - module: app
    - android-build:
        inputs:
        - variant: entourageProdRelease
        - module: app
    - android-build:
        inputs:
        - variant: pfpProdRelease
        - module: app
    - deploy-to-bitrise-io: {}
app:
  envs:
  - opts:
      is_expand: false
    GRADLE_BUILD_FILE_PATH: build.gradle
  - opts:
      is_expand: false
    GRADLE_TASK: assembleRelease
  - opts:
      is_expand: false
    GRADLEW_PATH: "./gradlew"
  - opts:
      is_expand: false
    GRADLE_TASK_TEST: 'testPreprodDebugUnitTest '
  - opts:
      is_expand: false
    GRADLE_TASK_LINT: 'lintEntourageProdProdRelease lintPfpProdProdRelease '
