apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'io.fabric'
apply plugin: 'appaloosa-deploy'

def versionMajor = 2
def versionMinor = 2
def versionPatch = 'git rev-list HEAD --count'.execute([], project.rootDir).text.trim().toInteger()

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.1'

    defaultConfig {
        applicationId 'social.entourage.android'
        minSdkVersion 15
        targetSdkVersion 25
        versionCode versionMajor * 100000 + versionMinor * 10000 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField 'String', 'AWS_BUCKET', '"entourage-avatars-production-thumb"'
        buildConfigField 'String', 'FLURRY_API_KEY', "\"${System.env.FLURRY_API_KEY}\""
        buildConfigField 'String', 'AWS_KEY', "\"${System.env.AWS_KEY}\""
        buildConfigField 'String', 'AWS_SECRET', "\"${System.env.AWS_SECRET}\""
    }

    signingConfigs {
        googleplay {
            keyAlias 'googleplay'
            keyPassword "${System.env.KEYSTORE_PASS}"
            storeFile file('../keystore/googleplay-keystore.jks')
            storePassword "${System.env.KEYSTORE_PASS}"
        }

        debug {
            storeFile file('../keystore/debug.keystore')
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.googleplay
            debuggable false
        }

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            buildConfigField 'String', 'TEST_ACCOUNT_LOGIN', "\"${System.env.TEST_ACCOUNT_LOGIN}\""
            buildConfigField 'String', 'TEST_ACCOUNT_PWD', "\"${System.env.TEST_ACCOUNT_PWD}\""
        }
    }

    productFlavors {
        preprod {
            applicationId 'social.entourage.android.preprod'
            buildConfigField 'String', 'ENTOURAGE_URL', '"https://entourage-back-preprod.herokuapp.com/api/v1/"'
            buildConfigField 'String', 'AWS_FOLDER', '"staging/300x300/"'
        }

        prod {
            applicationId 'social.entourage.android'
            buildConfigField 'String', 'ENTOURAGE_URL', '"https://api.entourage.social/api/v1/"'
            buildConfigField 'String', 'AWS_FOLDER', '"300x300/"'
        }
    }

    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
    def supportVersion = "25.1.0"
    def playServicesVersion = "10.0.1"
    def daggerVersion = "2.8"
    def okHttpVersion = "3.5.0"
    def retrofitVersion = "2.1.0"

    compile(
            files('libs/flurryAnalytics_6.5.0.jar'),
            "com.android.support:support-v4:${supportVersion}",
            "com.android.support:support-annotations:${supportVersion}",
            "com.android.support:cardview-v7:${supportVersion}",
            "com.android.support:recyclerview-v7:${supportVersion}",
            "com.android.support:appcompat-v7:${supportVersion}",
            "com.android.support:design:${supportVersion}",
            "com.google.android.gms:play-services-maps:${playServicesVersion}",
            "com.google.android.gms:play-services-location:${playServicesVersion}",
            "com.google.android.gms:play-services-gcm:${playServicesVersion}",
            'com.google.maps.android:android-maps-utils:0.4.4',
            "com.google.dagger:dagger:${daggerVersion}",
            "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            "com.squareup:tape:1.2.3",
            "com.squareup:otto:1.3.8",
            "com.squareup.picasso:picasso:2.5.2",
            "jp.wasabeef:picasso-transformations:2.1.0"
    )

    compile "com.jakewharton:butterknife:7.0.1"
    compile "com.github.clans:fab:1.6.2"
    compile "net.danlew:android.joda:2.7.1"
    compile "com.theartofdev.edmodo:android-image-cropper:2.2.2"
    compile "com.amazonaws:aws-android-sdk-core:2.3.1"
    compile "com.amazonaws:aws-android-sdk-s3:2.3.1"
    compile "com.amazonaws:aws-android-sdk-ddb:2.3.1"
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }

    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    testCompile(
            'junit:junit:4.12',
            'org.mockito:mockito-core:1.10.19',
            'org.assertj:assertj-core:1.7.1',
            'de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1'
    )

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile('com.jakewharton.espresso:okhttp3-idling-resource:1.0.0') {
        exclude group: 'com.android.support'
        exclude group: 'com.squareup.okhttp3'
    }
}


appaloosaDeploy {
    def buildVariant = 'release'
    def groupName = 'CoreTeam'
    def description = "${System.env.BITRISE_GIT_MESSAGE}"
    storeToken 'ypt4d26acetzxivf5ynjeeqfisr9p7dr'
    apks {
        preprodRelease {
            flavorName 'preprod'
            buildName buildVariant
            descriptionVersion description
            groupsName groupName
        }
        prodRelease {
            flavorName 'prod'
            buildName buildVariant
            descriptionVersion description
            groupsName groupName
        }
    }
}