apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def versionMajor = 4
def versionMinor = 1
def versionPatch = 'git rev-list HEAD --count'.execute([], project.rootDir).text.trim().toInteger()

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    def MIXPANEL_TOKEN_DEBUG = System.env.MIXPANEL_TOKEN_DEBUG ? '"' + System.env.MIXPANEL_TOKEN_DEBUG + '"' : entourageMixpanelTokenDebug;

    defaultConfig {
        applicationId 'social.entourage.android'
        minSdkVersion 15
        targetSdkVersion 26
        versionCode versionMajor * 100000 + versionMinor * 10000 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        def AWS_KEY = System.env.AWS_KEY ? '"' + System.env.AWS_KEY + '"' : entourageAWSKey;
        def AWS_SECRET = System.env.AWS_SECRET ? '"' + System.env.AWS_SECRET + '"' : entourageAWSSecret;

        def MIXPANEL_TOKEN = System.env.MIXPANEL_TOKEN ? '"' + System.env.MIXPANEL_TOKEN + '"' : entourageMixpanelToken;
        def FLURRY_API_KEY = System.env.FLURRY_API_KEY ? '"' + System.env.FLURRY_API_KEY + '"' : entourageFlurryAPIKey;

        buildConfigField 'String', 'AWS_BUCKET', '"entourage-avatars-production-thumb"'
        buildConfigField 'String', 'FLURRY_API_KEY', FLURRY_API_KEY
        buildConfigField 'String', 'AWS_KEY', AWS_KEY
        buildConfigField 'String', 'AWS_SECRET', AWS_SECRET
        buildConfigField 'String', 'MIXPANEL_TOKEN', MIXPANEL_TOKEN

        manifestPlaceholders = [deepLinksHostName: "www.entourage.social"]
    }

    signingConfigs {
        googleplay {
            keyAlias 'googleplay'
            keyPassword "${System.env.KEYSTORE_PASS}"
            storeFile file('../keystore/googleplay-keystore.jks')
            storePassword "${System.env.KEYSTORE_PASS}"
        }

        debug {
            storeFile file('../keystore/debug.keystore')
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.googleplay
            debuggable false
        }

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            buildConfigField 'String', 'TEST_ACCOUNT_LOGIN', "\"${System.env.TEST_ACCOUNT_LOGIN}\""
            buildConfigField 'String', 'TEST_ACCOUNT_PWD', "\"${System.env.TEST_ACCOUNT_PWD}\""
        }
    }

    flavorDimensions "entourage"

    productFlavors {
        preprod {
            applicationId 'social.entourage.android.preprod'
            buildConfigField 'String', 'ENTOURAGE_URL', '"https://entourage-back-preprod.herokuapp.com/api/v1/"'
            buildConfigField 'String', 'AWS_FOLDER', '"staging/300x300/"'
            buildConfigField 'String', 'MIXPANEL_TOKEN', MIXPANEL_TOKEN_DEBUG
            manifestPlaceholders = [deepLinksHostName: "entourage-landingpages-preprod.herokuapp.com"]
        }

        prod {
            applicationId 'social.entourage.android'
            buildConfigField 'String', 'ENTOURAGE_URL', '"https://api.entourage.social/api/v1/"'
            buildConfigField 'String', 'AWS_FOLDER', '"300x300/"'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "EntourageApp-${variant.name}-${variant.versionName}.apk"
        }
    }

    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    dexOptions {
        jumboMode = true
    }
}

dependencies {
    def supportVersion = "27.0.1"
    def playServicesVersion = "11.4.2"
    def daggerVersion = "2.13"
    def okHttpVersion = "3.9.0"
    def retrofitVersion = "2.3.0"
    def butterKnifeVersion = "8.8.1"
    def awsVersion = "2.6.5"

    implementation(
            "com.android.support:multidex:1.0.1",
            "com.flurry.android:analytics:7.2.3@aar",
            "com.android.support:support-v4:${supportVersion}",
            "com.android.support:support-annotations:${supportVersion}",
            "com.android.support:cardview-v7:${supportVersion}",
            "com.android.support:recyclerview-v7:${supportVersion}",
            "com.android.support:appcompat-v7:${supportVersion}",
            "com.android.support:design:${supportVersion}",
            "com.google.android.gms:play-services-maps:${playServicesVersion}",
            "com.google.android.gms:play-services-location:${playServicesVersion}",
            "com.google.android.gms:play-services-gcm:${playServicesVersion}",
            "com.google.android.gms:play-services-places:${playServicesVersion}",
            'com.google.maps.android:android-maps-utils:0.4.4',
            "com.google.dagger:dagger:${daggerVersion}",
            "com.jakewharton:butterknife:${butterKnifeVersion}",
            "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            "com.amazonaws:aws-android-sdk-core:${awsVersion}",
            "com.amazonaws:aws-android-sdk-s3:${awsVersion}",
            "com.squareup:tape:1.2.3",
            "com.squareup:otto:1.3.8",
            "com.squareup.picasso:picasso:2.5.2",
            "jp.wasabeef:picasso-transformations:2.1.0",
            "com.github.clans:fab:1.6.4",
            "net.danlew:android.joda:2.9.5.1",
            "com.theartofdev.edmodo:android-image-cropper:2.3.1",
            "me.leolin:ShortcutBadger:1.1.13@aar",
            "com.mixpanel.android:mixpanel-android:5.2.1",
            "com.facebook.android:facebook-core:[4,5)"
    )

    api("com.crashlytics.sdk.android:crashlytics:2.8.0@aar") {
        transitive = true;
    }

    annotationProcessor(
            "com.google.dagger:dagger-compiler:${daggerVersion}",
            "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"
    )

    testCompile(
            "junit:junit:4.12",
            "org.mockito:mockito-core:1.10.19",
            "org.assertj:assertj-core:1.7.1",
            "de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1"
    )

    androidTestCompile("com.android.support.test.espresso:espresso-core:2.2.2") {
        exclude group: 'com.android.support'
    }
    androidTestCompile("com.jakewharton.espresso:okhttp3-idling-resource:1.0.0") {
        exclude group: 'com.android.support'
        exclude group: 'com.squareup.okhttp3'
    }

    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
}
