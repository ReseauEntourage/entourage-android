apply plugin: "com.android.application"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

android {
    ext {
        // App versions
        versionMajor = 8
        versionMinor = 0
        versionPatch = "git rev-list HEAD --count".execute().text.trim().toInteger()
        versionBranchName = "git rev-parse --abbrev-ref HEAD".execute().text.trim()
        versionCodeInt = (versionMajor * 100 + versionMinor) * 10000 + versionPatch % 10000
        versionNameProd = "${versionMajor}.${versionMinor}.${versionPatch}"
        appBundleName = System.env.APPBUNDLE_NAME ? System.env.APPBUNDLE_NAME : "app"
    }

    kotlinOptions {
        jvmTarget = "11"
    }


    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    def TEST_ACCOUNT_LOGIN = System.env.TEST_ACCOUNT_LOGIN ? '"' + System.env.TEST_ACCOUNT_LOGIN + '"' : entourageTestLogin
    def TEST_ACCOUNT_PWD = System.env.TEST_ACCOUNT_PWD ? '"' + System.env.TEST_ACCOUNT_PWD + '"' : entourageTestPwd

    defaultConfig {
        applicationId 'social.entourage.android'
        resConfigs 'en', 'fr'


        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        // Making either of these two values dynamic in the defaultConfig will
        // require a full APK build and reinstallation because the AndroidManifest.xml
        // must be updated.
        versionCode 800
        versionName "8.0"

        buildConfigField 'String', 'VERSION_FULL_NAME', '"' + versionNameProd + '"'
        buildConfigField 'String', 'VERSION_DISPLAY_BRANCH_NAME', '"' + versionBranchName + '"'
        setProperty("archivesBaseName", "$appBundleName-$versionNameProd")
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true

        buildConfigField 'String', 'ENTOURAGE_URL', '"https://api.entourage.social/api/v1/"'
        buildConfigField 'String', 'TEST_ACCOUNT_LOGIN', TEST_ACCOUNT_LOGIN
        buildConfigField 'String', 'TEST_ACCOUNT_PWD', TEST_ACCOUNT_PWD
    }

    signingConfigs {
        googleplay {
            keyAlias 'googleplay'
            keyPassword "${System.env.KEYSTORE_PASS}"
            storeFile file('../keystore/googleplay-keystore.jks')
            storePassword "${System.env.KEYSTORE_PASS}"
        }

        debug {
            storeFile file('../keystore/debug.keystore')
        }
    }

    flavorDimensions 'app', 'env'

    productFlavors {
        prod {
            dimension 'env'
        }
        staging {
            dimension 'env'
            applicationIdSuffix '.preprod'

        }
        entourage {
            dimension 'app'
            buildConfigField 'String', 'API_KEY', '"50968038037d1df181e8372d"'
            ext {
                prod = [
                        serverURL        : "https://api.entourage.social/api/v1/",
                        deepLinksHostName: "www.entourage.social",
                        deepLinksScheme  : "entourage",
                        appLinksHostName : "app.entourage.social"
                ]
                staging = [
                        serverURL        : "https://api-preprod.entourage.social/api/v1/",
                        deepLinksHostName: "entourage-landingpages-preprod.herokuapp.com",
                        deepLinksScheme  : "entourage-staging",
                        appLinksHostName : "entourage-webapp-preprod.herokuapp.com"
                ]
            }
        }
    }

    buildTypes {
        release {
            productFlavors.entourage.signingConfig signingConfigs.googleplay
            debuggable false
        }

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
            //optimizing build speed
            splits.abi.enable = false
            splits.density.enable = false
            aaptOptions.cruncherEnabled = false
            FirebasePerformance {
                // Set this flag to 'false' to disable @AddTrace annotation processing and
                // automatic monitoring of HTTP/S network requests
                // for a specific build variant at compile time.
                instrumentationEnabled false
            }
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/notice.txt', 'META-INF/NOTICE.txt', 'META-INF/NOTICE', 'META-INF/license.txt', 'META-INF/LICENSE.txt', 'META-INF/LICENSE', 'META-INF/ASL2.0', 'META-INF/DEPENDENCIES']
        }
    }

    applicationVariants.all { variant ->
        def flavors = variant.productFlavors
        // flavorDimensions "app" -> 0, "env" -> 1
        def app = flavors[0]
        def environment = flavors[1]

        variant.buildConfigField "String", "ENTOURAGE_URL", "\"${app[environment.name]['serverURL']}\""
        variant.buildConfigField "String", "DEEP_LINKS_SCHEME", "\"${app[environment.name]['deepLinksScheme']}\""
        variant.buildConfigField "String", "DEEP_LINKS_URL", "\"${app[environment.name]['deepLinksHostName']}\""
        variant.buildConfigField "String", "APP_LINKS_URL", "\"${app[environment.name]['appLinksHostName']}\""

        variant.mergedFlavor.manifestPlaceholders = [
                deepLinksHostName       : "${app[environment.name]['deepLinksHostName']}",
                appLinksHostName        : "${app[environment.name]['appLinksHostName']}",
                deepLinksEntourageScheme: "${app[environment.name]['deepLinksScheme']}"
        ]

        // The defaultConfig values above are fixed, so your incremental builds don't
        // need to rebuild the manifest (and therefore the whole APK, slowing build times).
        // But for release builds, it's okay. So the following script iterates through
        // all the known variants, finds those that are "release" build types, and
        // changes those properties to something dynamic.
        if (variant.buildType.name == "release") {
            variant.outputs.each { output ->
                output.versionCodeOverride = versionCodeInt
                output.versionNameOverride = versionNameProd
            }
        }
    }


    useLibrary 'android.test.runner'
    lint {
        abortOnError false
        disable 'InvalidPackage'
    }
}

dependencies {
    implementation "androidx.core:core-ktx:1.7.0"
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))

    //implementation androidSupportDependencies.values()

    implementation "androidx.annotation:annotation:1.3.0"
    implementation "androidx.appcompat:appcompat:1.4.1"
    implementation "androidx.browser:browser:1.4.0"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.3"
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.legacy:legacy-support-v13:1.0.0"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.preference:preference-ktx:1.2.0"

    //implementation devDependencies.values()
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "net.danlew:android.joda:2.10.14"
    implementation "com.squareup:tape:1.2.3"
    implementation "com.jakewharton.timber:timber:5.0.1"
    implementation "com.squareup:otto:1.3.8"

    implementation platform('com.google.firebase:firebase-bom:29.3.1')
    //implementation firebaseDependencies.values()
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-messaging-ktx"
    implementation "com.google.firebase:firebase-inappmessaging-display-ktx"
    implementation "com.google.firebase:firebase-crashlytics-ktx"
    implementation "com.google.firebase:firebase-config-ktx"
    releaseImplementation "com.google.firebase:firebase-perf-ktx"

    //implementation gmsDependencies.values()
    implementation "com.google.android.gms:play-services-maps:18.0.2"
    implementation "com.google.android.gms:play-services-location:18.0.0" //v19 needs refactoring
    implementation "com.google.android.libraries.places:places-compat:2.6.0"
    //https://developers.google.com/android/guides/opensource
    implementation "com.google.android.gms:play-services-oss-licenses:17.0.0"

    //implementation networkDependencies.values()
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor"


    //implementation uiDependencies.values()
    implementation "com.wdullaer:materialdatetimepicker:4.2.3"
    implementation "com.github.clans:fab:1.6.4"
    implementation "com.github.takusemba:cropme:2.0.8"
    implementation "com.google.maps.android:maps-utils-ktx:3.4.0"
    implementation "com.google.android.material:material:1.6.0"
    implementation "com.github.bumptech.glide:glide:4.13.1"
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"
    implementation "net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC3"

    //entourageImplementation facebookDependencies.values()
    implementation "com.facebook.android:facebook-android-sdk:13.2.0"
    implementation "com.facebook.android:facebook-core:13.2.0"

    compileOnly "org.glassfish:javax.annotation:10.0-b28"

    //androidTestImplementation testDependencies.values()
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-web:3.4.0"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:3.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.4.0"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:2.2.0"
    androidTestImplementation "com.jakewharton.espresso:okhttp3-idling-resource:1.0.0"
    //,exclude: [group: "com.squareup.okhttp3"                    ]
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test:rules:1.4.0"
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:2.4.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.4.2"
    implementation "com.github.bumptech.glide:glide:4.13.1"
    implementation 'uk.co.markormesher:android-fab:2.5.0'
}

apply plugin: "com.google.gms.google-services"
