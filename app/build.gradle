apply plugin: "com.android.application"
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'io.fabric'
apply plugin: 'com.github.ben-manes.versions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    def MIXPANEL_TOKEN_DEBUG = System.env.MIXPANEL_TOKEN_DEBUG ? '"' + System.env.MIXPANEL_TOKEN_DEBUG + '"' : entourageMixpanelTokenDebug
    def MIXPANEL_TOKEN = System.env.MIXPANEL_TOKEN ? '"' + System.env.MIXPANEL_TOKEN + '"' : entourageMixpanelToken
    def MIXPANEL_TOKEN_PFP = System.env.MIXPANEL_TOKEN_PFP ? '"' + System.env.MIXPANEL_TOKEN_PFP + '"' : entourageMixpanelTokenPFP

    def TEST_ACCOUNT_LOGIN = System.env.TEST_ACCOUNT_LOGIN ? '"' + System.env.TEST_ACCOUNT_LOGIN + '"' : entourageTestLogin
    def TEST_ACCOUNT_PWD = System.env.TEST_ACCOUNT_PWD ? '"' + System.env.TEST_ACCOUNT_PWD + '"' : entourageTestPwd

    defaultConfig {
        applicationId 'social.entourage.android'

        resConfigs 'en', 'fr'

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode rootProject.ext.versionCodeInt
        versionName rootProject.ext.versionNameProd

        buildConfigField 'String', 'VERSION_DISPLAY_NAME', '"' + rootProject.ext.versionBranchName +'"'
        setProperty("archivesBaseName", "$appBundleName-$versionNameProd")
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary true

        buildConfigField 'String', 'ENTOURAGE_URL', '"https://api.entourage.social/api/v1/"'
        buildConfigField 'String', 'MIXPANEL_TOKEN', MIXPANEL_TOKEN

        buildConfigField 'String', 'TEST_ACCOUNT_LOGIN', TEST_ACCOUNT_LOGIN
        buildConfigField 'String', 'TEST_ACCOUNT_PWD', TEST_ACCOUNT_PWD
    }

    signingConfigs {
        googleplay {
            keyAlias 'googleplay'
            keyPassword "${System.env.KEYSTORE_PASS}"
            storeFile file('../keystore/googleplay-keystore.jks')
            storePassword "${System.env.KEYSTORE_PASS}"
        }

        googleplay_pfp {
            keyAlias 'googleplay-pfp'
            keyPassword "${System.env.KEYSTORE_PASS}"
            storeFile file('../keystore/googleplay-pfp-keystore.jks')
            storePassword "${System.env.KEYSTORE_PASS}"
        }

        debug {
            storeFile file('../keystore/debug.keystore')
        }
    }

    flavorDimensions 'app', 'env'

    productFlavors {
        prod {
            dimension 'env'
        }
        staging {
            dimension 'env'
            applicationIdSuffix '.preprod'
            buildConfigField 'String', 'MIXPANEL_TOKEN', MIXPANEL_TOKEN_DEBUG

        }
        entourage {
            dimension 'app'
            buildConfigField 'String', 'API_KEY', '"9de7f5860fd0b1067c1fd725"'
            ext {
                prod = [
                        serverURL: "https://api.entourage.social/api/v1/",
                        deepLinksHostName: "www.entourage.social",
                        deepLinksScheme: "entourage"
                ]
                staging = [
                        serverURL: "https://entourage-back-preprod.herokuapp.com/api/v1/",
                        deepLinksHostName: "entourage-landingpages-preprod.herokuapp.com",
                        deepLinksScheme: "entourage-staging"
                ]
            }
        }
        pfp {
            dimension 'app'
            applicationId 'social.entourage.android.pfp'
            buildConfigField 'String', 'MIXPANEL_TOKEN', MIXPANEL_TOKEN_PFP
            buildConfigField 'String', 'API_KEY', '"9ebf2b47e35046e43dae5e31"'

            ext {
                prod = [
                        serverURL: "https://apiPXTGS.entourage.social/api/v1/",
                        deepLinksHostName: "www.entourage.social/pfp",
                        deepLinksScheme: "pfp-prod"
                ]
                staging = [
                        serverURL: "https://pfp-back-preprod.herokuapp.com/api/v1/",
                        deepLinksHostName: "entourage-landingpages-preprod.herokuapp.com",
                        deepLinksScheme: "pfp-staging"
                ]
            }
        }
    }

    buildTypes {
        release {
            productFlavors.entourage.signingConfig signingConfigs.googleplay
            productFlavors.pfp.signingConfig signingConfigs.googleplay_pfp
            debuggable false
        }

        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            //optimizing build speed
            splits.abi.enable = false
            splits.density.enable = false
            aaptOptions.cruncherEnabled = false
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }

    android.applicationVariants.all { variant ->
        def flavors = variant.productFlavors
        // flavorDimensions "app" -> 0, "env" -> 1
        def app = flavors[0]
        def environment = flavors[1]

        variant.buildConfigField "String", "ENTOURAGE_URL", "\"${app[environment.name]['serverURL']}\""
        variant.buildConfigField "String", "DEEP_LINKS_SCHEME", "\"${app[environment.name]['deepLinksScheme']}\""

        variant.mergedFlavor.manifestPlaceholders = [
                deepLinksHostName       : "${app[environment.name]['deepLinksHostName']}",
                deepLinksEntourageScheme : "${app[environment.name]['deepLinksScheme']}"
        ]

    }

    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }

    dexOptions {
        jumboMode = true
    }
}

dependencies {
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.legacy:legacy-support-v4:$supportVersion"
    implementation "androidx.annotation:annotation:$supportVersion"
    implementation "androidx.cardview:cardview:$supportVersion"
    implementation "androidx.recyclerview:recyclerview:1.1.0-alpha02"
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "com.google.android.material:material:1.1.0-alpha03"
    implementation "androidx.browser:browser:$supportVersion"
    implementation "androidx.exifinterface:exifinterface:$supportVersion"
    implementation "androidx.legacy:legacy-support-v13:$supportVersion"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "com.google.android.gms:play-services-maps:16.1.0"
    implementation "com.google.android.gms:play-services-location:$playServicesVersion"
    implementation "com.google.android.gms:play-services-places:$playServicesVersion"
    implementation "com.google.maps.android:android-maps-utils:0.5"
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup:tape:1.2.3"
    implementation "com.squareup:otto:1.3.8"
    implementation "com.squareup.picasso:picasso:2.5.2"
    implementation "jp.wasabeef:picasso-transformations:2.2.1"
    implementation "com.github.clans:fab:1.6.4"
    implementation "net.danlew:android.joda:2.10.1"
    implementation "com.theartofdev.edmodo:android-image-cropper:2.8.0"
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"
    implementation "com.mixpanel.android:mixpanel-android:5.4.5"
    implementation "com.wdullaer:materialdatetimepicker:3.6.3"
    entourageImplementation "com.facebook.android:facebook-core:4.40.0"
    entourageImplementation "com.facebook.android:facebook-android-sdk:4.40.0"
    implementation "com.crashlytics.sdk.android:crashlytics:2.9.9"
    implementation "com.google.firebase:firebase-core:16.0.7"
    implementation "com.google.firebase:firebase-messaging:17.3.4"
    implementation "com.google.guava:guava:27.0.1-android"
    /*implementation "com.google.firebase:firebase-perf:16.2.3"*/
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    /*androidTestImplementation(
                "junit:junit:4.12",
                "org.mockito:mockito-core:1.10.19",
                "org.assertj:assertj-core:1.7.1",
                "de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1"
        )*/
    androidTestImplementation("androidx.test.espresso:espresso-core:3.1.0-alpha4") {
        exclude group: "com.android.support"
    }
    androidTestImplementation("com.jakewharton.espresso:okhttp3-idling-resource:1.0.0") {
        exclude group: "com.android.support"
        exclude group: "com.squareup.okhttp3"
    }
    compileOnly "org.glassfish:javax.annotation:10.0-b28"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.jakewharton.timber:timber:4.7.1"
}

apply plugin: "com.google.gms.google-services"
